version: '3.9'
services:

  homeautomation:
    container_name: homeautomation
    build: vsha-config
    restart: always
    volumes:
      - "/sys:/sys"
      - "/storage/homeautomation/log:/var/log/homeautomation"
    depends_on:
      - mosquitto
    environment:
      - TZ=Europe/Budapest
      - MQTT_USERNAME=${MQTT_USERNAME}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
      - SPRING_INFLUX_USER=${SPRING_INFLUX_USER}
      - SPRING_INFLUX_PASSWORD=${SPRING_INFLUX_PASSWORD}
      - BEEPER_ENABLED=${BEEPER_ENABLED}
      - BEEPER_PINNUMBER=${BEEPER_PINNUMBER}
      - SUNSETSUNRISE_ZENITH=${SUNSETSUNRISE_ZENITH}
      - SUNSETSUNRISE_LATITUDE=${SUNSETSUNRISE_LATITUDE}
      - SUNSETSUNRISE_LONGITUDE=${SUNSETSUNRISE_LONGITUDE}
      - SUNSETSUNRISE_TIMEZONE=${SUNSETSUNRISE_TIMEZONE}
      - TELEGRAM_BOTTOKEN=${TELEGRAM_BOTTOKEN}
      - TELEGRAM_CHATID=${TELEGRAM_CHATID}
    healthcheck:
      test: curl -m 5 --silent --fail --request GET http://localhost:8080/actuator/health | jq --exit-status -n 'inputs | if has("status") then .status=="UP" else false end' > /dev/null || exit 1
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s

  plex-webhook:
    container_name: plex-webhook
    build: vsha-plex-webhook
    restart: always
    volumes:
      - "/sys:/sys"
      - "/storage/plex-webhook/log:/var/log/plex-webhook"
    depends_on:
      - mosquitto
    environment:
      - TZ=Europe/Budapest
      - MQTT_USERNAME=${MQTT_USERNAME}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
    healthcheck:
      test: curl -m 5 --silent --fail --request GET http://localhost:8080/actuator/health | jq --exit-status -n 'inputs | if has("status") then .status=="UP" else false end' > /dev/null || exit 1
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - "/storage/mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf"
      - "/storage/mosquitto/config/ps.txt:/mosquitto/config/ps.txt"
      - "/storage/mosquitto/data:/mosquitto/data"
      - "/storage/mosquitto/log:/mosquitto/log"

  influxdb:
    container_name: influxdb
    image: influxdb
    restart: always
    ports:
      - "8086:8086"
    volumes:
      - "/storage/influxdb:/var/lib/influxdb"
      - "/storage/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro"
    command: -config=/etc/influxdb/influxdb.conf

  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: always
    volumes:
      - "/storage/grafana/grafana:/var/lib/grafana"
      - "/storage/grafana/etc:/etc/grafana"
      - "/storage/grafana/log:/var/log/grafana"
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_AUTH_ANONYMOUS_ENABLED=true

  nginx:
    build: vsha-frontend
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    depends_on:
      - grafana
      - homeautomation
  #    - plex-webhook

  # plex:
  #   container_name: plex
  #   image: linuxserver/plex
  #   restart: unless-stopped
  #   volumes:
  #     - "/storage/plex:/config"
  #     - "/storage/samba/plex:/tv"
  #     - "/storage/samba/plex:/movies"
  #   ports:
  #     - "32400:32400"
  #     - "1900:1900/udp"
  #     - "3005:3005"
  #     - "8324:8324"
  #     - "32410:32410/udp"
  #     - "32412:32412/udp"
  #     - "32413:32413/udp"
  #     - "32414:32414/udp"
  #     - "32469:32469"
  #   environment:
  #     - PUID=1001
  #     - PGID=1001
  #     - VERSION=docker
  #     - UMASK_SET=022
  #     - PLEX_CLAIM=${PLEX_CLAIM}
